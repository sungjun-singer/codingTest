"""
1. 아이디어
    - 가장 짧은 펠린드롬 만들기
    - 펠린드롬 : 앞에서부터 읽으나 뒤에서부터 읽으나 같게 읽히는 문자열
    - 문자열의 시작부분부터 읽으며 펠린드롬인지 확인하고 맞다면 고정하고 0~i까지의 값을 반대로해서 뒤에 붙인다.
    - 펠린드롬인지 확인하는 것은 reverse해서 같은지 확인한다.
    - 예를 들어 xybab 같은 경우
    1. xybab != babyx 이기 때문에 i+=1
    2. ybab != baby 이기 때문에 i+=1
    3. bab == bab 이기 때문에 고정
    4. 그 후 앞에 읽었던 xy를 reverse해서 문자열 뒤에 붙이면
    5. xybabyx가 완성된다.

2. 시간복잡도
    - 문자열 길이 만큼 반복과 반복문 내부에 reverse연산 = O(n^2) 50 * 50 -> 2500 가능
3. 자료구조
    - 문자열 : String
"""

import sys
input = sys.stdin.readline

S = input().strip()
# 문자열의 길이만큼 반복
for i in range(len(S)):
    # 현재 문자열과 reverse한 문자열 비교
    if S[i:] == S[i:][::-1]:
        # 앞부분의 펠린드롬 아닌 부분 reverse해서 문자열의 뒤에 붙임
        palindrome = S + S[:i][::-1]
        print(len(palindrome))
        break

"""
이번문제를 통해 공부한 것
- 문자열을 reverse하는 법을 배웠다.
- S[i:] -> 문자열의 i번째 인덱스부터 끝까지
- [::-1] -> reverse
- S[i:][::-1] -> 문자열의 i번째 인덱스부터 끝까지의 문자를 reverse
- S[:i] -> 문자열의 처음부터 i번째 인덱스까지
- S[:i][::-1] -> 문자열의 처음부터 i번째 인덱스까지 reverse

* 펠린드롬 문제를 고민하다가 안풀려서 찾아봤는데 이해가 안되서 코드를 보고 겨우 이해했다...
이거 계속 붙잡고 있었으면 5시간 걸렸을듯..
"""